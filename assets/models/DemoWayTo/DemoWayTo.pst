<?xml version="1.0"?><st-source><!-- Name: DemoWayToPackageName: DemoWayToParcel: #('DemoWayTo')ParcelName: DemoWayToDate: 2:14:06 am September 20, 2016 --><time-stamp>From VisualWorksÂ® NonCommercial, 7.6 of lundi 3 mars 2008 on mardi 20 septembre 2016 at 2:14:06</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><name-space><name>DemoWayTo</name><environment>CormasNS.Models</environment><private>false</private><imports>			private Smalltalk.*			private CormasNS.Kernel.*			</imports><category>DemoWayToCategory</category><attributes><package>DemoWayTo</package></attributes></name-space><class><name>Cell</name><environment>CormasNS.Models.DemoWayTo</environment><super>CormasNS.Kernel.SpatialEntityElement</super><private>false</private><indexed-type>none</indexed-type><inst-vars>landCover </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>DemoWayToCategory</category><attributes><package>DemoWayTo</package></attributes></class><class><name>DemoWayTo</name><environment>CormasNS.Models.DemoWayTo</environment><super>CormasNS.Kernel.CormasModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>theCells waterPoint diagonalDitch </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>DemoWayToCategory</category><attributes><package>DemoWayTo</package></attributes></class><methods><class-id>CormasNS.Models.DemoWayTo.Cell</class-id> <category>accessing</category><body package="DemoWayTo" selector="landCover">landCover	"Getter accessor with default value = #bareSoil "	^landCover ifNil:[landCover := #bareSoil]</body><body package="DemoWayTo" selector="landCover:">landCover: anObject 	landCover := anObject.	self defineVisualState; show</body></methods><methods><class-id>CormasNS.Models.DemoWayTo.Cell</class-id> <category>pov</category><body package="DemoWayTo" selector="pov">pov	^self landCover</body></methods><methods><class-id>CormasNS.Models.DemoWayTo.Cell class</class-id> <category>pov symbols</category><body package="DemoWayTo" selector="SpatialEntityPOV_bareSoil">SpatialEntityPOV_bareSoil"Returns an array containing the settings of a Spatial entity pov symbol in the following order:(color red) (color green) (color blue)"^Array with: 1.0 with: 0.75998 with: 0.0</body><body package="DemoWayTo" selector="SpatialEntityPOV_ditch">SpatialEntityPOV_ditch"Returns an array containing the settings of a Spatial entity pov symbol in the following order:(color red) (color green) (color blue)"^Array with: 0.0 with: 0.0 with: 0.0</body><body package="DemoWayTo" selector="SpatialEntityPOV_water">SpatialEntityPOV_water"Returns an array containing the settings of a Spatial entity pov symbol in the following order:(color red) (color green) (color blue)"^Array with: 0.0 with: 0.0 with: 1.0</body></methods><methods><class-id>CormasNS.Models.DemoWayTo.Cell class</class-id> <category>- default value</category><body package="DemoWayTo" selector="landCover_default">landCover_default 	"Return the default value of attribute #landCover : #bareSoil.		!! This method was automatically generated by Cormas !!"	^#bareSoil</body></methods><methods><class-id>CormasNS.Models.DemoWayTo.DemoWayTo</class-id> <category>init</category><body package="DemoWayTo" selector="init">init	self prepareSpatialGrid.	self buildDiagonalDitch.	self createWaterPoint.	self bridgeDitch.	self displayPov: #pov of: Cell</body></methods><methods><class-id>CormasNS.Models.DemoWayTo.DemoWayTo</class-id> <category>control</category><body package="DemoWayTo" selector="stepConstraint:">stepConstraint: t "example of wayTo with constraints"	| start end path |	start := Cormas selectRandomlyFrom: (self theCells 						select: [:aCell | aCell landCover = #bareSoil]).	end := start nearestCellVerifying: [:aCell | aCell landCover = #water]				constraintOnPath: [:aCell | aCell landCover ~= #ditch].	path := start wayTo: end constraint: [:aCell | aCell landCover ~= #ditch].	path 		do: [:aCell | aCell landCover = #bareSoil ifTrue: [aCell color: #white]].	start color: #red.</body><body package="DemoWayTo" selector="stepDirect:">stepDirect: t "example of wayTo, directly"	| start end path |	start := Cormas selectRandomlyFrom: (self theCells 						select: [:aCell | aCell landCover = #bareSoil]).	"end := start nearestCellVerifying: [:aCell | aCell landCover = #water]				constraintOnPath: [:aCell | aCell landCover ~= #ditch]."	end := self theCells detect: [:aCell | aCell landCover = #water].	end ifNil:[^nil].	path := start wayTo: end.	path 		do: [:aCell | aCell landCover = #bareSoil ifTrue: [aCell color: #white]].	start color: #red."((path size ) ~= (start distanceTo: end)) ifTrue:[self halt]."Cormas println: (start distanceTo: end)</body><body package="DemoWayTo" selector="stepMixt:">stepMixt: t "example of wayTo, directly +  with constraints"	| start end path |	start := Cormas selectRandomlyFrom: (self theCells 						select: [:aCell | aCell landCover = #bareSoil]).	end := start nearestCellVerifying: [:aCell | aCell landCover = #water]				constraintOnPath: [:aCell | aCell landCover ~= #ditch].	path := start wayTo: end constraint: [:aCell | aCell landCover ~= #ditch].	path 		do: [:aCell | aCell landCover = #bareSoil ifTrue: [aCell color: #white]]."*** direct***"	path := start wayTo: end.	path 		do: [:aCell | aCell landCover = #bareSoil ifTrue: [aCell color: #yellow]].	start color: #red.</body></methods><methods><class-id>CormasNS.Models.DemoWayTo.DemoWayTo</class-id> <category>accessing</category><body package="DemoWayTo" selector="diagonalDitch">diagonalDitch	^diagonalDitch</body><body package="DemoWayTo" selector="diagonalDitch:">diagonalDitch: anObject	diagonalDitch := anObject</body><body package="DemoWayTo" selector="theCells">theCells^theCells ifNil:[theCells := IndexedSet new]</body><body package="DemoWayTo" selector="theCells:">theCells: xtheCells := x</body><body package="DemoWayTo" selector="waterPoint">waterPoint	"Getter accessor without default value "	^waterPoint</body><body package="DemoWayTo" selector="waterPoint:">waterPoint: anObject 	waterPoint := anObject</body></methods><methods><class-id>CormasNS.Models.DemoWayTo.DemoWayTo</class-id> <category>instance-creation</category><body package="DemoWayTo" selector="bridgeDitch">bridgeDitch	self diagonalDitch		removeFirst;		removeLast.	(Cormas selectRandomlyFrom: self diagonalDitch) landCover: #bareSoil</body><body package="DemoWayTo" selector="buildDiagonalDitch">buildDiagonalDitch	self diagonalDitch: (self spaceModel upperRightLocation 				wayTo: self spaceModel lowerLeftLocation).	self diagonalDitch do: [:aCell | aCell landCover: #ditch]</body><body package="DemoWayTo" selector="createWaterPoint">createWaterPoint	self waterPoint: (Cormas selectRandomlyFrom: (self theCells select: [:aCell | aCell landCover = #bareSoil])).	self waterPoint landCover: #water</body><body package="DemoWayTo" selector="prepareSpatialGrid">prepareSpatialGrid	self spaceModel 		initializeRegularX: 20		Y: 10		shape: #hexagonal		nbNeighbours: #six		boundaries: #closed.	self theCells do: [:aCell | aCell landCover: #bareSoil]</body></methods><methods><class-id>CormasNS.Models.DemoWayTo.DemoWayTo class</class-id> <category>description</category><body package="DemoWayTo" selector="authors">authors^ 'clp'</body><body package="DemoWayTo" selector="comments">comments^ ''</body><body package="DemoWayTo" selector="cormasCompatibleVersion">cormasCompatibleVersion^ #(2016 9 12 2 46 15)</body><body package="DemoWayTo" selector="creationDate">creationDate^ '03/03/2005'</body><body package="DemoWayTo" selector="emails">emails^ 'le_page@cirad.fr'</body><body package="DemoWayTo" selector="lastUpdate">lastUpdate^ 'mardi 20 septembre 2016'	</body><body package="DemoWayTo" selector="version">version^ 'DemoWayTo.pcl'	</body><body package="DemoWayTo" selector="vwCompatibleVersion">vwCompatibleVersion^ '7.6'	</body></methods><methods><class-id>CormasNS.Models.DemoWayTo.DemoWayTo class</class-id> <category>- default value</category><body package="DemoWayTo" selector="diagonalDitch_default">diagonalDitch_default 	"Return the default value of attribute #diagonalDitch : nil.		!! This method was automatically generated by Cormas !!"	^nil</body><body package="DemoWayTo" selector="waterPoint_default">waterPoint_default 	"Return the default value of attribute #waterPoint : nil.		!! This method was automatically generated by Cormas !!"	^nil</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>CormasModel</name><environment>CormasNS.Kernel</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>cormas timeStepValue channel activeInit activeControl spaceModel data simManager database collector defaultAttributesSetter sensitivitySetter delayedChanges allClassVarBOSS </inst-vars><class-inst-vars>timeStep cellClass spatialClasses socialClasses passiveClasses povColorsDict visualStateIsOpen charts activeProbes activityDiagrams currentSimulation randUi autoUpdating quickChanges </class-inst-vars><imports></imports><category>CormasKernel-Interface</category><attributes><package>Cormas</package></attributes></class><class><name>SpatialEntityElement</name><environment>CormasNS.Kernel</environment><super>CormasNS.Kernel.SpatialEntity</super><private>false</private><indexed-type>none</indexed-type><inst-vars>orderedNeighbourhood default </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CormasKernel-Entities</category><attributes><package>Cormas</package></attributes></class></st-source>