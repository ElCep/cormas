<?xml version="1.0"?><st-source><!-- Name: DiffusePackageName: DiffuseParcel: #('Diffuse')ParcelName: DiffuseDate: 1:37:45 pm September 30, 2014 --><time-stamp>From VisualWorksÂ® NonCommercial, 7.6 of lundi 3 mars 2008 on mardi 30 septembre 2014 at 13:37:45</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><name-space><name>Diffuse</name><environment>CormasNS.Models</environment><private>false</private><imports>			private Smalltalk.*			private CormasNS.Kernel.*			</imports><category>DiffuseCategory</category><attributes><package>Diffuse</package></attributes></name-space><class><name>Cell</name><environment>CormasNS.Models.Diffuse</environment><super>CormasNS.Kernel.SpatialEntityElement</super><private>false</private><indexed-type>none</indexed-type><inst-vars>qty lostOrReceivedQty </inst-vars><class-inst-vars>minimunState diffusionRate evaporationRate scheduler </class-inst-vars><imports></imports><category>Cormas-Diffuse</category><attributes><package>Diffuse</package></attributes></class><class><name>Diffuse</name><environment>CormasNS.Models.Diffuse</environment><super>CormasNS.Kernel.CormasModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>theCells theAnts activeCells newActiveCells noMoreActiveCells antNumber </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Cormas-Diffuse</category><attributes><package>Diffuse</package></attributes></class><class><name>Ant</name><environment>CormasNS.Models.Diffuse</environment><super>CormasNS.Kernel.AgentLocation</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>depositQty </class-inst-vars><imports></imports><category>Cormas-Diffuse</category><attributes><package>Diffuse</package></attributes></class><shared-variable><name>CurrentId</name><environment>CormasNS.Models.Diffuse.Cell</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>Diffuse</package></attributes></shared-variable><shared-variable><name>CurrentId</name><environment>CormasNS.Models.Diffuse.Ant</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>Diffuse</package></attributes></shared-variable><methods><class-id>CormasNS.Models.Diffuse.Cell</class-id> <category>control</category><body package="Diffuse" selector="diffuse">diffuse	"Diffusion of hormons around the cell.Each neighbours will receive a quantity equals to qty*diffusionRate/connexity.diffusionRate is the % of hormon I should give to my neigbourhood.If I am at the edge, I will give less hormons"		| qtyToGiveToEachCell qtyGiven |	self qty &gt; 0		ifTrue:			[qtyToGiveToEachCell := self qty * Cell diffusionRate / self neighbourhood size.			qtyGiven := 0.			self neighbourhood do:					[: neigh | qtyGiven := qtyGiven + qtyToGiveToEachCell.					neigh lostOrReceivedQty: neigh lostOrReceivedQty + qtyToGiveToEachCell].			self lostOrReceivedQty: self lostOrReceivedQty - qtyGiven]</body><body package="Diffuse" selector="evaporate">evaporate	self qty: ((self qty - (self qty * Cell evaporationRate)) max: 0 )</body><body package="Diffuse" selector="updateState">updateState"lostOrReceivedQty is the buffer state for synchronous diffusion"	self lostOrReceivedQty ~= 0 		ifTrue: 			[self qty: (self qty + self lostOrReceivedQty) asFloat.			self lostOrReceivedQty: 0.			self qty &lt; Cell minimunState ifTrue: [self qty: 0]]</body></methods><methods><class-id>CormasNS.Models.Diffuse.Cell</class-id> <category>init</category><body package="Diffuse" selector="initEmpty">initEmpty self qty: 0. self lostOrReceivedQty: self qty</body></methods><methods><class-id>CormasNS.Models.Diffuse.Cell</class-id> <category>pov</category><body package="Diffuse" selector="pov">pov^self povAttribute: #qty min: 0 max: 100 color: ColorValue green</body></methods><methods><class-id>CormasNS.Models.Diffuse.Cell</class-id> <category>accessing</category><body package="Diffuse" selector="lostOrReceivedQty">lostOrReceivedQty	"Getter accessor with default value = 0 "	^lostOrReceivedQty ifNil:[lostOrReceivedQty := 0]</body><body package="Diffuse" selector="lostOrReceivedQty:">lostOrReceivedQty: anObject	anObject ifNil:[^nil].	lostOrReceivedQty := anObject.	Cell scheduler newActiveCells add: self</body><body package="Diffuse" selector="qty">qty	"Getter accessor with default value = 0 "	^qty ifNil:[qty := 0]</body><body package="Diffuse" selector="qty:">qty: aNumber	qty := aNumber.	"((qty = nil) not and:[qty &gt; 0]) "	qty &gt; 0 		ifTrue: [Cell scheduler newActiveCells add: self]		ifFalse: [Cell scheduler noMoreActiveCells add: self].	self changed</body></methods><methods><class-id>CormasNS.Models.Diffuse.Cell</class-id> <category>manipulation</category><body package="Diffuse" selector="methodsForManipulation">methodsForManipulation^#('diffuse' 'evaporate' 'initEmpty')</body></methods><methods><class-id>CormasNS.Models.Diffuse.Cell</class-id> <category>info</category><body package="Diffuse" selector="info_Qty">info_Qty	^self qty</body></methods><methods><class-id>CormasNS.Models.Diffuse.Cell class</class-id> <category>accessing</category><body package="Diffuse" selector="diffusionRate">diffusionRate	"Getter accessor with default value = 0.5 "	^diffusionRate ifNil:[diffusionRate := 0.5]</body><body package="Diffuse" selector="diffusionRate:">diffusionRate: anObject	diffusionRate := anObject</body><body package="Diffuse" selector="evaporationRate">evaporationRate	"Getter accessor with default value = 0.1 "	^evaporationRate ifNil:[evaporationRate := 0.1]</body><body package="Diffuse" selector="evaporationRate:">evaporationRate: anObject	evaporationRate := anObject</body><body package="Diffuse" selector="minimunState">minimunState	"Getter accessor with default value = 1 "	^minimunState ifNil:[minimunState := 1]</body><body package="Diffuse" selector="minimunState:">minimunState: anObject	minimunState := anObject</body><body package="Diffuse" selector="scheduler">scheduler	^scheduler</body><body package="Diffuse" selector="scheduler:">scheduler: anObject	scheduler := anObject</body></methods><methods><class-id>CormasNS.Models.Diffuse.Cell class</class-id> <category>testing</category><body package="Diffuse" selector="isAbstract">isAbstract ^false</body></methods><methods><class-id>CormasNS.Models.Diffuse.Cell class</class-id> <category>- default value</category><body package="Diffuse" selector="diffusionRate_default">diffusionRate_default 	"Return the default value of diffusionRate attribute"		^0.5</body><body package="Diffuse" selector="evaporationRate_default">evaporationRate_default 	"Return the default value of evaporationRate attribute"		^0.1</body><body package="Diffuse" selector="lostOrReceivedQty_default">lostOrReceivedQty_default 	"Return the default value of lostOrReceivedQty attribute"		^0</body><body package="Diffuse" selector="minimunState_default">minimunState_default 	"Return the default value of minimunState attribute"		^1</body><body package="Diffuse" selector="qty_default">qty_default 	"Return the default value of qty attribute"		^0</body><body package="Diffuse" selector="scheduler_default">scheduler_default 	"Return the default value of scheduler attribute"		^nil</body></methods><methods><class-id>CormasNS.Models.Diffuse.Diffuse</class-id> <category>accessing</category><body package="Diffuse" selector="activeCells">activeCells	^activeCells</body><body package="Diffuse" selector="activeCells:">activeCells: anObject	activeCells := anObject</body><body package="Diffuse" selector="antNumber">antNumber	"Getter accessor with default value = 1 "	^antNumber ifNil:[antNumber := 1]</body><body package="Diffuse" selector="antNumber:">antNumber: anObject	antNumber := anObject</body><body package="Diffuse" selector="newActiveCells">newActiveCells	^newActiveCells</body><body package="Diffuse" selector="newActiveCells:">newActiveCells: anObject	newActiveCells := anObject</body><body package="Diffuse" selector="noMoreActiveCells">noMoreActiveCells	^noMoreActiveCells</body><body package="Diffuse" selector="noMoreActiveCells:">noMoreActiveCells: anObject	noMoreActiveCells := anObject</body><body package="Diffuse" selector="theAnts">theAnts^theAnts ifNil:[theAnts := IndexedSet new]</body><body package="Diffuse" selector="theAnts:">theAnts: xtheAnts := x</body><body package="Diffuse" selector="theCells">theCells^theCells ifNil:[theCells := IndexedSet new]</body><body package="Diffuse" selector="theCells:">theCells: x 	theCells := x</body></methods><methods><class-id>CormasNS.Models.Diffuse.Diffuse</class-id> <category>init</category><body package="Diffuse" selector="init">init	self spaceModel loadEnvironmentFromFile: '40x40.env' withPov: #pov.	self initOptimize.	self setRandomlyLocatedAgents: Ant n: (self antNumber)</body></methods><methods><class-id>CormasNS.Models.Diffuse.Diffuse</class-id> <category>control</category><body package="Diffuse" selector="stepSynchronously:">stepSynchronously: t "diffusion of pheromoes and activities of the ants""evaporation and synchronous diffusion"	self activeCells do: [:a | a evaporate. a diffuse].			"optimisation" self updateActiveCells.	self activeCells do: [:a | a updateState]."activities of the ants"	self theAnts do:[:a | a step].			"optimisation" self updateActiveCells.</body></methods><methods><class-id>CormasNS.Models.Diffuse.Diffuse</class-id> <category>optimize</category><body package="Diffuse" selector="initOptimize">initOptimize	Cell scheduler: self.	self activeCells: Set new.	self newActiveCells: Set new.	self noMoreActiveCells: Set new</body><body package="Diffuse" selector="updateActiveCells">updateActiveCells	self activeCells removeAll: self noMoreActiveCells.	self activeCells addAll: self newActiveCells.	self newActiveCells: Set new.	self noMoreActiveCells: Set new.</body></methods><methods><class-id>CormasNS.Models.Diffuse.Diffuse class</class-id> <category>description</category><body package="Diffuse" selector="authors">authors^ 'Pierre Bommel'	</body><body package="Diffuse" selector="comments">comments^ 'This model illustrates how the principle of cellular automata is implemented in Cormas. This simple model presents an ant that moves randomly in a radius of 2 space units and deposits pheromones on the ground. The pheromone diffuses on the space and evaporates simultaneously.In this version, the Ants perform a standard Step method (load the jumpingAnt version that uses the Activity diagram).See: http://cormas.cirad.fr/en/applica/diffuse.htm '	</body><body package="Diffuse" selector="cormasCompatibleVersion">cormasCompatibleVersion^ #(2014 9 29 17 54 34)</body><body package="Diffuse" selector="creationDate">creationDate^ 'vendredi 21 septembre 2012'	</body><body package="Diffuse" selector="currentDeveloperName">currentDeveloperName^ ' Pierre Bommel'	</body><body package="Diffuse" selector="emails">emails^ 'bommel@cirad.fr'	</body><body package="Diffuse" selector="howToRunIt">howToRunIt| txt |txt := '1. Prepare the visualisation of the spatial grid\' withCRs asText emphasizeAllWith: #(#bold #large).txt := txt, '1.1 Click on the ' asText, ('Visualisation ' asText emphasizeAllWith: #color -&gt; ColorValue red), 'menu, then on the Space item to open the standard spatial grid.\' withCRs asText.txt := txt, '1.2 In the ' asText, ('poV ' asText emphasizeAllWith: #italic), 'menu, clicking on the ' asText, ('Cell -&gt; pov ' asText emphasizeAllWith: #italic), 'item.\' withCRs asText.txt := txt, '1.3 In the ' asText, ('poV ' asText emphasizeAllWith: #italic), 'menu, clicking on the ' asText, ('Ant -&gt; pov ' asText emphasizeAllWith: #italic), 'item.\\' withCRs asText.txt := txt, ('2. Initialize a simulation\' withCRs asText emphasizeAllWith: #(#bold #large)).txt := txt, '2.1 Click on the ' asText, ('Simulation ' asText emphasizeAllWith: #color -&gt; ColorValue red), 'menu of Cormas, then select the ' asText, ('Simulation Interface ' asText emphasizeAllWith: #italic), ' item.\' withCRs asText.txt := txt, '2.2 Click on the ' asText, ('Initialize ' asText emphasizeAllWith: #italic), 'button of the ' asText, ('Simulation ' asText emphasizeAllWith: #color -&gt; ColorValue red),  'area.\' withCRs asText.txt := txt, '2.3 Set the ' asText, ('final step ' asText emphasizeAllWith: #italic), ' (ex: 5000), then validate by clicking on ' asText, ('Apply.\\' asText emphasizeAllWith: #italic) withCRs asText.txt := txt, ('3. Run the model\' withCRs asText emphasizeAllWith: #(#bold #large)).txt := txt, '3.1 Click on the ' asText, ('Run ' asText emphasizeAllWith: #italic), 'button of the ' asText,  ('Simulation ' asText emphasizeAllWith: #color -&gt; ColorValue red),  'area.\\' withCRs asText.ComposedTextView open: txt asValue label: ('How to run ', self name, '     step-by-step instructions') icon: (Icon constantNamed: #workspace) extent: 620@300</body><body package="Diffuse" selector="lastUpdate">lastUpdate^ 'mardi 30 septembre 2014'	</body><body package="Diffuse" selector="version">version^ 'Diffuse.pcl'	</body><body package="Diffuse" selector="versionComments">versionComments^ '  --------------------- Diffuse.pcl --------------------- Date: 2012.9.20 - 13:35:18Compatible with Cormas2 version *** Developer:  Pierre Bommel *** --------------------- Diffuse.pcl --------------------- Date: 2014.9.29howToRunIt OK *** Developer:  Pierre Bommel ***'	</body><body package="Diffuse" selector="vwCompatibleVersion">vwCompatibleVersion^ '7.6'	</body></methods><methods><class-id>CormasNS.Models.Diffuse.Diffuse class</class-id> <category>testing</category><body package="Diffuse" selector="isAbstract">isAbstract ^false</body></methods><methods><class-id>CormasNS.Models.Diffuse.Diffuse class</class-id> <category>- default value</category><body package="Diffuse" selector="activeCells_default">activeCells_default 	"Return the default value of activeCells attribute"		^nil</body><body package="Diffuse" selector="antNumber_default">antNumber_default 	"Return the default value of antNumber attribute"		^1</body><body package="Diffuse" selector="newActiveCells_default">newActiveCells_default 	"Return the default value of newActiveCells attribute"		^nil</body><body package="Diffuse" selector="noMoreActiveCells_default">noMoreActiveCells_default 	"Return the default value of noMoreActiveCells attribute"		^nil</body></methods><methods><class-id>CormasNS.Models.Diffuse.Ant</class-id> <category>pov</category><body package="Diffuse" selector="pov">pov"return a symbol or a ColorValue"^#ant"^ColorValue white"</body></methods><methods><class-id>CormasNS.Models.Diffuse.Ant</class-id> <category>control</category><body package="Diffuse" selector="depositPheromone">depositPheromone"The ant deposites 150 units of pheromones on the ground "	self patch qty: self patch qty + self class depositQty</body><body package="Diffuse" selector="randomWalk">randomWalk	"the ant moves randomly into a radius of 2 cells"	self randomWalk: 2</body><body package="Diffuse" selector="step">step	" the ant moves randomly and deposits pheromone."	self randomWalk.	self depositPheromone</body></methods><methods><class-id>CormasNS.Models.Diffuse.Ant class</class-id> <category>testing</category><body package="Diffuse" selector="isAbstract">isAbstract ^false</body></methods><methods><class-id>CormasNS.Models.Diffuse.Ant class</class-id> <category>pov symbols</category><body package="Diffuse" selector="VectorialPOV_Ant">VectorialPOV_Ant"Returns an array containing the settings of a Situated entity vectorial pov symbol in the following order:(color red) (color green) (color blue) (lineColor red) (lineColor green) (lineColor blue) lineWidth sizeratio position (array of outline vertices)"^#(1.0 1.0 0.0 0.0 0.0 0.0 1 0.5 #center #(0@-17 15@-9 15@8 0@17 -15@9 -15@-9 0@-17))</body><body package="Diffuse" selector="VectorialPOV_ant">VectorialPOV_ant"Returns an array containing the settings of a Situated entity vectorial pov symbol in the following order:(color red) (color green) (color blue) (lineColor red) (lineColor green) (lineColor blue) lineWidth sizeratio position (array of outline vertices)"^#(1.0 0.0 0.0 0.0 0.0 0.0 1 1 #center #(-1.74658@-26.5929 10.1301@-26.7143 23.4041@-14.9357 5.93836@-10.9286 24.1027@-6.07143 8.73288@-1.21429 23.4041@9.83571 1.74658@13.3571 21.3082@24.2857 -1.74658@22.95 -23.4041@24.2857 -6.63699@14.5714 -23.4041@8.5 -6.63699@-1.21429 -24.8014@-4.85714 -3.84247@-12.1429 -26.8973@-14.9357 -13.6233@-26.7143 -1.74658@-26.5929))</body></methods><methods><class-id>CormasNS.Models.Diffuse.Ant class</class-id> <category>accessing</category><body package="Diffuse" selector="depositQty">depositQty	"Getter accessor with default value = 150 "	^depositQty ifNil:[depositQty := 150]</body><body package="Diffuse" selector="depositQty:">depositQty: anObject	"Setter accessor of attribute depositQty "	depositQty := anObject</body></methods><methods><class-id>CormasNS.Models.Diffuse.Ant class</class-id> <category>- default value</category><body package="Diffuse" selector="depositQty_default">depositQty_default 	"Return the default value of depositQty attribute"		^150</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>AgentLocation</name><environment>CormasNS.Kernel</environment><super>CormasNS.Kernel.Agent</super><private>false</private><indexed-type>none</indexed-type><inst-vars>patch </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CormasKernel-Entities</category><attributes><package>Cormas</package></attributes></class><class><name>CormasModel</name><environment>CormasNS.Kernel</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>cormas timeStepValue channel activeInit activeControl spaceModel data simManager database collector defaultAttributesSetter sensitivitySetter delayedChanges allClassVarBOSS </inst-vars><class-inst-vars>timeStep cellClass spatialClasses socialClasses passiveClasses povColorsDict visualStateIsOpen charts activeProbes activityDiagrams currentSimulation randUi </class-inst-vars><imports></imports><category>CormasKernel-Interface</category><attributes><package>Cormas</package></attributes></class><class><name>SpatialEntityElement</name><environment>CormasNS.Kernel</environment><super>CormasNS.Kernel.SpatialEntity</super><private>false</private><indexed-type>none</indexed-type><inst-vars>orderedNeighbourhood default </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CormasKernel-Entities</category><attributes><package>Cormas</package></attributes></class></st-source>