<?xml version="1.0"?><st-source><!-- Name: Demo_AquiferPackageName: Demo_AquiferParcel: #('Demo_Aquifer')ParcelName: Demo_AquiferDate: 8:24:04 pm April 30, 2017 --><time-stamp>From VisualWorksÂ® NonCommercial, 7.6 of lundi 3 mars 2008 on dimanche 30 avril 2017 at 20:24:04</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><name-space><name>Demo_Aquifer</name><environment>CormasNS.Models</environment><private>false</private><imports>			private Smalltalk.*			private CormasNS.Kernel.*			</imports><category>Demo_AquiferCategory</category><attributes><package>Demo_Aquifer</package></attributes></name-space><class><name>Plot</name><environment>CormasNS.Models.Demo_Aquifer</environment><super>CormasNS.Kernel.SpatialEntityElement</super><private>false</private><indexed-type>none</indexed-type><inst-vars>storativity head conductivity altitude base head_buffer </inst-vars><class-inst-vars>sideLength </class-inst-vars><imports></imports><category>Demo_AquiferCategory</category><attributes><package>Demo_Aquifer</package></attributes></class><class><name>Demo_Aquifer</name><environment>CormasNS.Models.Demo_Aquifer</environment><super>CormasNS.Kernel.CormasModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>thePlots </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Demo_AquiferCategory</category><attributes><package>Demo_Aquifer</package></attributes></class><methods><class-id>CormasNS.Models.Demo_Aquifer.Plot</class-id> <category>control</category><body package="Demo_Aquifer" selector="diffuseWater">diffuseWater	"Diffusion of water from the current cell towards the surrounded lower cells according to the Darcy's law:	Qi,j = 1/L^2 x (K.(h-b) . dH ."		| totalFlow receivers newH aFlow neighHs gradTot |	self head &lt;= 0 ifTrue: [^nil].	totalFlow := 0.	newH := self head.	receivers := self receivers.	receivers isEmpty ifTrue: [^0].	neighHs := Dictionary new."Distributes hypotetical flows"	receivers do:			[:neigh | 			aFlow := self waterFlowTowards: neigh.			neighHs at: neigh put: neigh head_buffer + (neigh headFromVol: aFlow).			newH := newH - (self headFromVol: aFlow).			totalFlow := totalFlow + aFlow].	totalFlow = 0 ifTrue: [^0]."If too much flows, set the totalFlow equals to the average of head and lowest head"	newH &lt; (Cormas min: neighHs values)		ifTrue:			[newH := ((Cormas min: (receivers collect: [:c | c head])) + self head) / 2.			totalFlow := self volFromHead: (self head - newH max: 0).			totalFlow = 0 ifTrue: [^0].			gradTot := 0.			receivers do: [:neigh | gradTot := gradTot + (self gradientWith: neigh)].			receivers do: [:neigh | 					aFlow := totalFlow * (self gradientWith: neigh) / gradTot.					neigh head_buffer: neigh head_buffer + (neigh headFromVol: aFlow)]]		ifFalse: [neighHs keysAndValuesDo: [:neigh :h | neigh head_buffer: h]]."Remove totalFlow"	self head_buffer: (self head_buffer - (self headFromVol: totalFlow) max: 0).	^totalFlow</body><body package="Demo_Aquifer" selector="diffuseWaterUniform">diffuseWaterUniform	"Diffusion of water from the cell towards the surrounded cells according to the Darcy's law:	Qi,j = K.A.(dH/L)=w.T.(dH/L), if w=l then Q=T.dHEach neighbours will receive a quantity equals to ... ."		| totalFlow receivers newH aFlow neighHs |	self head &lt;= 0 ifTrue: [^nil].	totalFlow := 0.	newH := self head.	receivers := self receivers.	receivers isEmpty ifTrue: [^0].	neighHs := List new.	receivers		do:			[:neigh | 			aFlow := self waterFlowTowards: neigh.			neighHs add: (neigh head_buffer + (neigh headFromVol: aFlow)).			newH := newH - (self headFromVol: aFlow).			totalFlow := totalFlow + aFlow].	"thickness"	newH &lt; (Cormas max: neighHs)		ifTrue:			[newH := ((Cormas max: (receivers collect: [:c| c head_buffer])) + self head) /2.			totalFlow := self volFromHead: ((self head - newH) max: 0).			receivers				do:					[:neigh | 					aFlow := totalFlow / receivers size.					neigh head_buffer: (neigh head_buffer + (neigh headFromVol: aFlow))]	"((Cormas max: neighHs) - newH) / newH / receivers size"]		ifFalse:			[totalFlow := 0.			receivers				do:					[:neigh | 					aFlow := self waterFlowTowards: neigh.					neigh head_buffer: (neigh head_buffer + (neigh headFromVol: aFlow)).					totalFlow := totalFlow + aFlow]].	self head_buffer: ((self head_buffer - (self headFromVol: totalFlow)) max: 0).	^totalFlow</body><body package="Demo_Aquifer" selector="updateHead">updateHead		self setHead: (Plot num: self head_buffer forPrecision: 2).</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Plot</class-id> <category>accessing</category><body package="Demo_Aquifer" selector="altitude">altitude	"Getter accessor with initial value = 210 m. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^altitude ifNil:[altitude := 210]</body><body package="Demo_Aquifer" selector="altitude:">altitude: aSmallInteger 	"Setter accessor of attribute elevation (Unit: m). 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	altitude := aSmallInteger</body><body package="Demo_Aquifer" selector="base">base	"Getter accessor with initial value = 0 m. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^base ifNil:[base := 0]</body><body package="Demo_Aquifer" selector="base:">base: aSmallInteger 	"Setter accessor of attribute base (Unit: m). 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	base := aSmallInteger</body><body package="Demo_Aquifer" selector="conductivity">conductivity	"Getter accessor with initial value = 32 m/day. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^conductivity ifNil:[conductivity := 32]</body><body package="Demo_Aquifer" selector="conductivity:">conductivity: aSmallInteger 	"Setter accessor of attribute conductivity (Unit: m/day). 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	conductivity := aSmallInteger</body><body package="Demo_Aquifer" selector="head:">head: anObject	"Setter accessor of attribute head. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	head = anObject ifTrue:[^nil].   "for optimization"	head := anObject.	head_buffer := anObject.	self changed</body><body package="Demo_Aquifer" selector="head_buffer">head_buffer	"Getter accessor with initial value = 0 m. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^head_buffer ifNil:[head_buffer := 0]</body><body package="Demo_Aquifer" selector="head_buffer:">head_buffer: aSmallInteger 	"Setter accessor of attribute head_buffer (Unit: m). 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	head_buffer := aSmallInteger</body><body package="Demo_Aquifer" selector="setHead:">setHead: newH	self head: (newH max: self base).	head_buffer := head</body><body package="Demo_Aquifer" selector="storativity">storativity	"Getter accessor with initial value = 0.3 dimensionless. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^storativity ifNil:[storativity := 0.3]</body><body package="Demo_Aquifer" selector="storativity:">storativity: aFloat 	"Setter accessor of attribute storativity (Unit: dimensionless). 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	storativity := aFloat</body><body package="Demo_Aquifer" selector="surface">surface	^self class sideLength raisedTo: 2</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Plot</class-id> <category>initialize-release</category><body package="Demo_Aquifer" selector="initMaxHead">initMaxHead	self head: self head + 1.	self head_buffer:  self head.</body><body package="Demo_Aquifer" selector="initRandomHead">initRandomHead	self head: (Cormas randomFloatFrom: self base to: self altitude).	self initVolume</body><body package="Demo_Aquifer" selector="initVolume">initVolume	"according to the current head"	self waterVolume: (self volFromHead: head).	self waterVolume_buffer: self waterVolume</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Plot</class-id> <category>pov</category><body package="Demo_Aquifer" selector="povHead">povHead"return a symbol or a ColorValue"^ self povAttribute: #head min: 195 max: 206.5 color: #blue</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Plot</class-id> <category>procedures</category><body package="Demo_Aquifer" selector="deltaH:">deltaH: otherPlot	^self head - otherPlot head</body><body package="Demo_Aquifer" selector="gradientWith:">gradientWith: aPlot			"^ (self head_buffer - aPlot head_buffer) / self class sideLength"			^ (self head - aPlot head) / self class sideLength</body><body package="Demo_Aquifer" selector="headFromVol:">headFromVol: aWaterVolume	"m"	^aWaterVolume / (self storativity * self surface)</body><body package="Demo_Aquifer" selector="linearWaterTowards:">linearWaterTowards: aReceiverPlot	" according to the Darcy's law:	Exchange:  in m/day 	Exchange:i,j = 1/L^2 x (K.(h-b) . dH)"		| dH K |	dH := self deltaH: aReceiverPlot.	dH &lt;= 0 ifTrue: [^0].	K := (self conductivity + aReceiverPlot conductivity) / 2.	^K * self thickness * dH / (self class sideLength raisedTo: 2)</body><body package="Demo_Aquifer" selector="receivers">receivers	"list of the plots with lower level"	"| epsilon |	epsilon := 1e-6.	^self neighbourhood select: [:c | c head_buffer &lt; (self head_buffer + epsilon)]"		^self neighbourhood select: [:c | c head &lt; self head]</body><body package="Demo_Aquifer" selector="receiveWaterHeight:">receiveWaterHeight: aH	"Adds aH meters of water"	self setHead: self head + aH</body><body package="Demo_Aquifer" selector="removeWaterHeight:">removeWaterHeight: aH	"Remove aH meters of water"	| aRealH |	aRealH := self head min: aH.	self setHead: self head - aRealH.	^aRealH</body><body package="Demo_Aquifer" selector="thickness">thickness	"m"	^ self head - self base</body><body package="Demo_Aquifer" selector="volFromHead:">volFromHead: aHead	"m3"	^self storativity * self surface * (aHead - self base)</body><body package="Demo_Aquifer" selector="waterFlowTowards:">waterFlowTowards: aReceiverPlot	" according to the Darcy's law:	Q  in m3/day 	Qi,j = 1/L^2 x (K.(h-b) . dH"		| dH K thickness |	dH := self deltaH: aReceiverPlot.	dH &lt;= 0 ifTrue: [^0].	thickness := (self head min: aReceiverPlot head) - (self base max: aReceiverPlot base).	K := (self conductivity + aReceiverPlot conductivity) / 2.	^K * thickness * dH / (self class sideLength raisedTo: 2)  / self storativity</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Plot</class-id> <category>probes</category><body package="Demo_Aquifer" selector="head">head	"Getter accessor with initial value = 200 m. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^head ifNil:[head := 200]</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Plot</class-id> <category>- initialize-release</category><body package="Demo_Aquifer" selector="init">init	self head: self head asFloat.	self head_buffer:  self head asFloat.</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Plot class</class-id> <category>testing</category><body package="Demo_Aquifer" selector="isAbstract">isAbstract ^false</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Plot class</class-id> <category>+ parameter unit</category><body package="Demo_Aquifer" selector="altitude_type">altitude_type 	"Return the type of attribute #altitude.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_Aquifer" selector="altitude_unit">altitude_unit 	"Return the unit of attribute #altitude.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'm'</body><body package="Demo_Aquifer" selector="base_type">base_type 	"Return the type of attribute #base.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_Aquifer" selector="base_unit">base_unit 	"Return the unit of attribute #base.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'm'</body><body package="Demo_Aquifer" selector="conductivity_type">conductivity_type 	"Return the type of attribute #conductivity.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_Aquifer" selector="conductivity_unit">conductivity_unit 	"Return the unit of attribute #conductivity.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'm/day'</body><body package="Demo_Aquifer" selector="elevation_type">elevation_type 	"Return the type of attribute #elevation.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_Aquifer" selector="elevation_unit">elevation_unit 	"Return the unit of attribute #elevation.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'm'</body><body package="Demo_Aquifer" selector="head_buffer_type">head_buffer_type 	"Return the type of attribute #head_buffer.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_Aquifer" selector="head_buffer_unit">head_buffer_unit 	"Return the unit of attribute #head_buffer.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'm'</body><body package="Demo_Aquifer" selector="head_type">head_type 	"Return the type of attribute #head.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_Aquifer" selector="head_unit">head_unit 	"Return the unit of attribute #head.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'm'</body><body package="Demo_Aquifer" selector="sideLength_type">sideLength_type 	"Return the type of attribute #sideLength.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_Aquifer" selector="sideLength_unit">sideLength_unit 	"Return the unit of attribute #sideLength.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'm'</body><body package="Demo_Aquifer" selector="storativity_type">storativity_type 	"Return the type of attribute #storativity.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^Float</body><body package="Demo_Aquifer" selector="storativity_unit">storativity_unit 	"Return the unit of attribute #storativity.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'dimensionless'</body><body package="Demo_Aquifer" selector="transmissivity_type">transmissivity_type 	"Return the type of attribute #transmissivity.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_Aquifer" selector="transmissivity_unit">transmissivity_unit 	"Return the unit of attribute #transmissivity.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'm2/day'</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Plot class</class-id> <category>- default value</category><body package="Demo_Aquifer" selector="altitude_default">altitude_default 	"Return the default value of attribute #altitude : 210.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^210</body><body package="Demo_Aquifer" selector="base_default">base_default 	"Return the default value of attribute #base : 0.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^0</body><body package="Demo_Aquifer" selector="conductivity_default">conductivity_default 	"Return the default value of attribute #conductivity : 32.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^32</body><body package="Demo_Aquifer" selector="head_buffer_default">head_buffer_default 	"Return the default value of attribute #head_buffer : 0.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^0</body><body package="Demo_Aquifer" selector="head_default">head_default 	"Return the default value of attribute #head : 200.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^200</body><body package="Demo_Aquifer" selector="sideLength_default">sideLength_default 	"Return the default value of attribute #sideLength : 10.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^10</body><body package="Demo_Aquifer" selector="storativity_default">storativity_default 	"Return the default value of attribute #storativity : 0.3.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^0.3</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Plot class</class-id> <category>accessing</category><body package="Demo_Aquifer" selector="num:forPrecision:">num: aNum forPrecision: precision		^((aNum * (10 raisedTo: precision)) rounded / (10 raisedTo: precision)) asFloat</body><body package="Demo_Aquifer" selector="sideLength">sideLength	"Getter accessor with initial value = 10 m. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^sideLength ifNil:[sideLength := 10]</body><body package="Demo_Aquifer" selector="sideLength:">sideLength: aSmallInteger 	"Setter accessor of attribute sideLength (Unit: m). 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	sideLength := aSmallInteger</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Demo_Aquifer</class-id> <category>init</category><body package="Demo_Aquifer" selector="initOneHead1D">initOneHead1D"To be completed"	self createGridX: 10 Y: 1 neighbourhood: 4 closed: true.	self thePlots do:[:c | c init].	(self thePlots at: 1) initMaxHead.	self displayPov: #povHead of: Plot.</body><body package="Demo_Aquifer" selector="initOneHead2D">initOneHead2D"To be completed"	self createGridX: 10 Y: 10 neighbourhood: 4 closed: true.	self thePlots do:[:c | c init].	(self thePlots at: 1) initMaxHead.	self displayPov: #povHead of: Plot.</body><body package="Demo_Aquifer" selector="initRandomHeads1D">initRandomHeads1D"To be completed"	self createGridX: 10 Y: 1 neighbourhood: 4 closed: true.	self initCells: #initRandomHead.	self displayPov: #povHead of: Plot.</body><body package="Demo_Aquifer" selector="initRandomHeads2D">initRandomHeads2D	self createGridX: 10 Y: 10 neighbourhood: 4 closed: true.	self initCells: #initRandomHead.	self displayPov: #povHead of: Plot.</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Demo_Aquifer</class-id> <category>control</category><body package="Demo_Aquifer" selector="step:">step: t	| aH |	self ask: Plot toDo: #diffuseWater.	self ask: Plot toDo: #updateHead.	aH := self thePlots last removeWaterHeight: 2. 	self thePlots first receiveWaterHeight: aH</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Demo_Aquifer</class-id> <category>accessing</category><body package="Demo_Aquifer" selector="thePlots">thePlots	"Returns a collection of all the instances of the sub classes collected by cormasModel.	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"^thePlots ifNil:[thePlots := IndexedSet new]</body><body package="Demo_Aquifer" selector="thePlots:">thePlots: aNewCollection	"Set a new collection for theXXXs attribute.	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	thePlots := aNewCollection</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Demo_Aquifer</class-id> <category>probes</category><body package="Demo_Aquifer" selector="averageHead">averageHead "return the average value of Plot head to be recorded" ^self averageOfAttribute: #head of: Plot</body><body package="Demo_Aquifer" selector="waterVolumeTotal">waterVolumeTotal "return the sum value of Plot waterVolume to be recorded" ^self sumOfAttribute: #waterVolume of: Plot</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Demo_Aquifer</class-id> <category>default values</category><body package="Demo_Aquifer" selector="hiddenAttributes">hiddenAttributes"returns a list of hidden attributs that are not displayed by the parameter interface.This method is automatically generated by the Parameters interface."	| aList cav |	aList := List new.	cav := ClassAttributeValue newClass: Plot attribute: #head_buffer value: 0.	cav isHidden: true.	aList add: cav.	^aList</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Demo_Aquifer</class-id> <category>instance-creation</category><body package="Demo_Aquifer" selector="initAgents">initAgents"To be completed"	</body></methods><methods><class-id>CormasNS.Models.Demo_Aquifer.Demo_Aquifer class</class-id> <category>description</category><body package="Demo_Aquifer" selector="authors">authors^ 'GrÃ©goire LeclercPierre BommelMarie-Paule Bonnet'	</body><body package="Demo_Aquifer" selector="comments">comments^ 'A simple model that presents the movements of water in an aquifer.Each plot (of 100 squared meters) is an aquifer with head as the absolute water height.'	</body><body package="Demo_Aquifer" selector="cormasCompatibleVersion">cormasCompatibleVersion^ #(2017 4 24 9 30 49)</body><body package="Demo_Aquifer" selector="creationDate">creationDate^ 'lundi 14 novembre 2016'	</body><body package="Demo_Aquifer" selector="currentDeveloperName">currentDeveloperName^ 'GrÃ©goire Leclerc'	</body><body package="Demo_Aquifer" selector="emails">emails^ 'gregoire.leclerc@cirad.frbommel@cirad.frmarie-paule.bonnet@ird.fr'	</body><body package="Demo_Aquifer" selector="lastUpdate">lastUpdate^ 'dimanche 30 avril 2017'	</body><body package="Demo_Aquifer" selector="version">version^ 'Demo_Aquifer.pcl'	</body><body package="Demo_Aquifer" selector="versionComments">versionComments^ '  --------------------- Demo_Aquifer.pcl --------------------- Date: 2016.11.13 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_Aquifer.pcl --------------------- Date: 2016.11.13 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_Aquifer.pcl --------------------- Date: 2016.11.13 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24setHead: *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_AquiferMPB.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_Aquifer.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc *** --------------------- Demo_Aquifer.pcl --------------------- Date: 2017.4.24 *** Developer: GrÃ©goire Leclerc ***'	</body><body package="Demo_Aquifer" selector="vwCompatibleVersion">vwCompatibleVersion^ '7.6'	</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>CormasModel</name><environment>CormasNS.Kernel</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>cormas timeStepValue channel activeInit activeControl spaceModel data simManager database collector defaultAttributesSetter sensitivitySetter delayedChanges allClassVarBOSS </inst-vars><class-inst-vars>timeStep cellClass spatialClasses socialClasses passiveClasses povColorsDict visualStateIsOpen charts activeProbes activityDiagrams currentSimulation randUi autoUpdating quickChanges </class-inst-vars><imports></imports><category>CormasKernel-Interface</category><attributes><package>Cormas</package></attributes></class><class><name>SpatialEntityElement</name><environment>CormasNS.Kernel</environment><super>CormasNS.Kernel.SpatialEntity</super><private>false</private><indexed-type>none</indexed-type><inst-vars>orderedNeighbourhood </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CormasKernel-Entities</category><attributes><package>Cormas</package></attributes></class></st-source>