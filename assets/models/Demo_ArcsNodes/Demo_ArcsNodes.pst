<?xml version="1.0"?><st-source><!-- Name: Demo_ArcsNodesParcel: #('Demo_ArcsNodes')Date: 8:55:34 am September 26, 2016 --><time-stamp>From VisualWorksÂ® NonCommercial, 7.6 of lundi 3 mars 2008 on lundi 26 septembre 2016 at 8:55:34</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><name-space><name>Demo_ArcsNodes</name><environment>CormasNS.Models</environment><private>false</private><imports>			private Smalltalk.*			private CormasNS.Kernel.*			</imports><category>NetworkExampleCategory</category><attributes><package>Demo_ArcsNodes</package></attributes></name-space><class><name>Node</name><environment>CormasNS.Models.Demo_ArcsNodes</environment><super>CormasNS.Kernel.NodeEntity</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>NetworkExampleCategory</category><attributes><package>Demo_ArcsNodes</package></attributes></class><class><name>Demo_ArcsNodes</name><environment>CormasNS.Models.Demo_ArcsNodes</environment><super>CormasNS.Kernel.CormasModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>theCells theArcs theNodes </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>NetworkExampleCategory</category><attributes><package>Demo_ArcsNodes</package></attributes></class><class><name>Arc</name><environment>CormasNS.Models.Demo_ArcsNodes</environment><super>CormasNS.Kernel.ArcEntity</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>NetworkExampleCategory</category><attributes><package>Demo_ArcsNodes</package></attributes></class><class><name>Cell</name><environment>CormasNS.Models.Demo_ArcsNodes</environment><super>CormasNS.Kernel.SpatialEntityElement</super><private>false</private><indexed-type>none</indexed-type><inst-vars>test </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>NetworkExampleCategory</category><attributes><package>Demo_ArcsNodes</package></attributes></class><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Node</class-id> <category>pov</category><body package="Demo_ArcsNodes" selector="povSize">povSize"return a symbol that is associated to an image"	self isNetworkStartNode ifTrue:[^#start].	self isNetworkStopNode ifTrue:[^#stop].   ^self arcs size &gt; 2 ifFalse:[#small] ifTrue:[#big]</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Node class</class-id> <category>testing</category><body package="Demo_ArcsNodes" selector="isAbstract">isAbstract ^false</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Node class</class-id> <category>pov symbols</category><body package="Demo_ArcsNodes" selector="VectorialPOV_big">VectorialPOV_big"Returns an array containing the settings of a Situated entity vectorial pov symbol in the following order:(color red) (color green) (color blue) (lineColor red) (lineColor green) (lineColor blue) lineWidth sizeratio position (array of outline vertices) isDistortable." ^#(0.0 0.670004 0.0 0.0 0.0 0.0 1 1 #center #(0.0@-12.24 10.8@-6.48 10.8@5.76 0.0@12.24 -10.8@6.48 -10.8@-6.48 0.0@-12.24) true)</body><body package="Demo_ArcsNodes" selector="VectorialPOV_Node">VectorialPOV_Node"Returns an array containing the settings of a Situated entity vectorial pov symbol in the following order:(color red) (color green) (color blue) (lineColor red) (lineColor green) (lineColor blue) lineWidth sizeratio position (array of outline vertices) isDistortable." ^#(1.0 0.0 0.0 0.0 0.0 0.0 1 1 #random #(0.0@-6.8 6.0@-3.6 6.0@3.2 0.0@6.8 -6.0@3.6 -6.0@-3.6 0.0@-6.8) true)</body><body package="Demo_ArcsNodes" selector="VectorialPOV_povId">VectorialPOV_povId"Returns an array containing the settings of a Situated entity vectorial pov symbol in the following order:(color red) (color green) (color blue) (lineColor red) (lineColor green) (lineColor blue) lineWidth sizeratio position (array of outline vertices)"^#(0.0 0.0 1.0 0.0 0.0 0.0 1 0.1 #center #(0@-17 15@-9 15@8 0@17 -15@9 -15@-9 0@-17))</body><body package="Demo_ArcsNodes" selector="VectorialPOV_small">VectorialPOV_small"Returns an array containing the settings of a Situated entity vectorial pov symbol in the following order:(color red) (color green) (color blue) (lineColor red) (lineColor green) (lineColor blue) lineWidth sizeratio position (array of outline vertices) isDistortable." ^#(0.0 0.0 1.0 0.0 0.0 0.0 1 1 #topLeft #(0.0@-5.1 4.5@-2.7 4.5@2.4 0.0@5.1 -4.5@2.7 -4.5@-2.7 0.0@-5.1) true)</body><body package="Demo_ArcsNodes" selector="VectorialPOV_start">VectorialPOV_start"Returns an array containing the settings of a Situated entity vectorial pov symbol in the following order:(color red) (color green) (color blue) (lineColor red) (lineColor green) (lineColor blue) lineWidth sizeratio position (array of outline vertices) isDistortable." ^#(0.0 1.0 0.0 0.0 0.0 0.0 1 1 #center #(11.5803@12.3354 -12.9839@12.3354 -12.9839@-12.9573 12.5161@-12.75 12.2821@-10.8841 -9.47475@-10.8841 -9.24085@-1.34756 3.15826@-1.55488 2.69037@0.932925 -9.47475@1.14024 -9.24085@9.84755 11.8142@9.84755 12.0482@12.5427) true)</body><body package="Demo_ArcsNodes" selector="VectorialPOV_stop">VectorialPOV_stop"Returns an array containing the settings of a Situated entity vectorial pov symbol in the following order:(color red) (color green) (color blue) (lineColor red) (lineColor green) (lineColor blue) lineWidth sizeratio position (array of outline vertices) isDistortable." ^#(1.0 0.0 0.0 0.0 0.0 0.0 1 1 #center #(-0.404628@-11.9568 4.1353@-11.9568 7.38446@-10.0145 8.67523@-7.41682 10.9452@-5.1469 12.0377@-0.303471 10.9452@3.93299 9.2053@7.38446 7.38446@9.40762 4.1353@10.7429 1.92198@11.4307 -0.708101@12.0377 -4.94458@10.7429 -8.39602@8.80066 -9.60994@6.7775 -11.7544@3.93299 -12.4423@-0.708101 -11.7544@-5.1469 -9.40762@-9.40762 -6.17059@-12.0377 -4.95667@-10.8238 -7.99142@-8.1937 -10.0145@-5.56363 -10.6215@-1.51736 -10.2168@1.92198 -7.38446@6.97982 -1.31504@10.4192 2.73124@9.40762 6.7775@6.97982 9.81221@1.71967 8.80066@-4.95667 5.56363@-7.7891 2.1243@-10.0145 -4.55207@-10.6215 -4.94458@-11.9568 -0.505786@-12.4423) true)</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Node class</class-id> <category>- default value</category><body package="Demo_ArcsNodes" selector="replaceNodeWhileMoving_default">replaceNodeWhileMoving_default 	"Return the default value of attribute #replaceNodeWhileMoving : true.		!! This method was automatically generated by Cormas !!"	^true</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Node class</class-id> <category>As yet unclassified</category><body package="Demo_ArcsNodes" selector="defaultColor">defaultColor "Returns the default color (Automatically defined by Cormas)." ^ColorValue red</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Demo_ArcsNodes</class-id> <category>init</category><body package="Demo_ArcsNodes" selector="init">init	self openDisplayDefaultPOVsOf: (List with: Cell with: Arc with: Node).	self spaceModel initializeRegularX: 10 Y: 10 shape: #squared nbNeighbours: #eight boundaries: #closed.	"Constructs the network"	self createRandomNetworkOfN: 1 arcs: Arc.</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Demo_ArcsNodes</class-id> <category>control</category><body package="Demo_ArcsNodes" selector="stepDestroy:">stepDestroy: t	"destroy one node"		self theArcs isEmpty		ifFalse: [(Cormas selectRandomlyFrom: self theArcs) destroyed: true]</body><body package="Demo_ArcsNodes" selector="stepMove:">stepMove: t	"move one node randomly"		Cormas randomBoolean		ifTrue: [(Cormas selectRandomlyFrom: self theArcs) moveStopNodeRandomly]		ifFalse: [(Cormas selectRandomlyFrom: self theArcs) moveStartNodeRandomly]</body><body package="Demo_ArcsNodes" selector="stepNewMoveDestroy:">stepNewMoveDestroy: t"creates 2 nodes, move one node and destroy one"	2 timesRepeat:			[self stepNewNode: t]."move one node"	self stepMove: t."destroy one node"	self stepDestroy: t.</body><body package="Demo_ArcsNodes" selector="stepNewNode:">stepNewNode: t	"creates 1 new arc after the last one"		| lastCell |	lastCell := (self theArcs at: self theArcs size) stopCell.	Arc newFromCell: lastCell toCell: self pickCell</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Demo_ArcsNodes</class-id> <category>accessing</category><body package="Demo_ArcsNodes" selector="theArcs">theArcs^theArcs ifNil:[theArcs := IndexedSet new]</body><body package="Demo_ArcsNodes" selector="theArcs:">theArcs: xtheArcs := x</body><body package="Demo_ArcsNodes" selector="theCells">theCells^theCells ifNil:[theCells := IndexedSet new]</body><body package="Demo_ArcsNodes" selector="theCells:">theCells: xtheCells := x</body><body package="Demo_ArcsNodes" selector="theNodes">theNodes^theNodes ifNil:[theNodes := IndexedSet new]</body><body package="Demo_ArcsNodes" selector="theNodes:">theNodes: xtheNodes := x</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Demo_ArcsNodes class</class-id> <category>description</category><body package="Demo_ArcsNodes" selector="authors">authors^ 'Pierre Bommel'	</body><body package="Demo_ArcsNodes" selector="comments">comments^ 'A simple example model that creates a network of Arcs and Nodes spatialy located on the grid'	</body><body package="Demo_ArcsNodes" selector="cormasCompatibleVersion">cormasCompatibleVersion^ #(2016 9 25 11 22 37)</body><body package="Demo_ArcsNodes" selector="creationDate">creationDate^ 'May 16, 2010'	</body><body package="Demo_ArcsNodes" selector="currentDeveloperName">currentDeveloperName^ 'Pierre Bommel'	</body><body package="Demo_ArcsNodes" selector="emails">emails^ 'bommel@cirad.fr'	</body><body package="Demo_ArcsNodes" selector="lastUpdate">lastUpdate^ 'lundi 26 septembre 2016'	</body><body package="Demo_ArcsNodes" selector="version">version^ 'Demo_ArcsNodes.pcl'	</body><body package="Demo_ArcsNodes" selector="versionComments">versionComments^ '  --------------------- NetworkExample-withNodes.pcl --------------------- Date: 2016.9.25 *** Developer: Pierre Bommel *** --------------------- NetworkExample-withNodes.pcl --------------------- Date: 2016.9.25 *** Developer: Pierre Bommel *** --------------------- NetworkExample-withNodes.pcl --------------------- Date: 2016.9.25 *** Developer: Pierre Bommel *** --------------------- Demo_ArcsNodes.pcl --------------------- Date: 2016.9.25 *** Developer: Pierre Bommel *** --------------------- Demo_ArcsNodes.pcl --------------------- Date: 2016.9.25 *** Developer: Pierre Bommel ***'	</body><body package="Demo_ArcsNodes" selector="vwCompatibleVersion">vwCompatibleVersion^ '7.6'	</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Demo_ArcsNodes class</class-id> <category>testing</category><body package="Demo_ArcsNodes" selector="isAbstract">isAbstract ^false</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Demo_ArcsNodes class</class-id> <category>+ description</category><body package="Demo_ArcsNodes" selector="howToRunIt">howToRunIt| txt |	txt := 'This model has only one init method.3 basic runs are available: 1- create a new arc at each step,2- destroy an arc at each step,3- move randomly a node at each step.The #stepNewMoveDestroy: combines the 3 basics' asText emphasizeAllWith: #(#large).	ComposedTextView open: txt asValue		label: 'How to run ' , self name , '     step-by-step instructions'		icon: (Icon constantNamed: #workspace)		extent: 400 @ 150</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Arc</class-id> <category>accessing</category><body package="Demo_ArcsNodes" selector="nodeType">nodeType	"return the type of Node of the model. May be redefined"	^Node</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Arc class</class-id> <category>testing</category><body package="Demo_ArcsNodes" selector="isAbstract">isAbstract ^false</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Arc class</class-id> <category>- default value</category><body package="Demo_ArcsNodes" selector="startNode_default">startNode_default 	"Return the default value of startNode attribute"		^nil</body><body package="Demo_ArcsNodes" selector="stopNode_default">stopNode_default 	"Return the default value of stopNode attribute"		^nil</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Arc class</class-id> <category>pov symbols</category><body package="Demo_ArcsNodes" selector="ArcPOV_Arc">ArcPOV_Arc"Returns an array containing the settings of a Arc entity pov symbol in the following order:(lineColor red) (lineColor green) (lineColor blue) lineWidth startAnnotation stopAnnotation startPosition stopPosition"^#(1.0 1.0 0.0 2 false true#center #center )</body><body package="Demo_ArcsNodes" selector="ArcPOV_povId">ArcPOV_povId"Returns an array containing the settings of a Arc entity pov symbol in the following order:(lineColor red) (lineColor green) (lineColor blue) lineWidth startAnnotation stopAnnotation"^#(0.0 0.0 0.0 1 false true)</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Cell</class-id> <category>init</category><body package="Demo_ArcsNodes" selector="init">init	"to be completed. The inherited attributes should have been already initialized"</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Cell</class-id> <category>accessing</category><body package="Demo_ArcsNodes" selector="test">test	"Getter accessor with initial value = 3 sc. 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !! "	^test ifNil:[test := 3]</body><body package="Demo_ArcsNodes" selector="test:">test: aSmallInteger 	"Setter accessor of attribute test (Unit: sc). 	This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!  "	test := aSmallInteger</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Cell class</class-id> <category>testing</category><body package="Demo_ArcsNodes" selector="isAbstract">isAbstract ^false</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Cell class</class-id> <category>pov symbols</category><body package="Demo_ArcsNodes" selector="SpatialEntityPOV_Cell">SpatialEntityPOV_Cell"Returns an array containing the settings of a Spatial entity pov symbol in the following order:(color red) (color green) (color blue)"^Array with: 0.560005 with: 0.560005 with: 0.0</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Cell class</class-id> <category>+ parameter unit</category><body package="Demo_ArcsNodes" selector="test_type">test_type 	"Return the type of attribute #test.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^SmallInteger</body><body package="Demo_ArcsNodes" selector="test_unit">test_unit 	"Return the unit of attribute #test.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^ 'sc'</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Cell class</class-id> <category>- default value</category><body package="Demo_ArcsNodes" selector="test_default">test_default 	"Return the default value of attribute #test : 3.		This method was automatically generated by Cormas.	!! BECAREFUL, You should not modify this method as it can be generated again when changing the value (Sensitivity Analysis for ex) !!"	^3</body></methods><methods><class-id>CormasNS.Models.Demo_ArcsNodes.Cell class</class-id> <category>As yet unclassified</category><body package="Demo_ArcsNodes" selector="defaultColor">defaultColor "Returns the default color (Automatically defined by Cormas)." ^(ColorValue red: 0.560005 green: 0.560005 blue: 0.0)</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>NodeEntity</name><environment>CormasNS.Kernel</environment><super>CormasNS.Kernel.NetworkComponentEntity</super><private>false</private><indexed-type>none</indexed-type><inst-vars>arcs replaceNodeWhileMoving </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Cormas</package></attributes></class><class><name>CormasModel</name><environment>CormasNS.Kernel</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>cormas timeStepValue channel activeInit activeControl spaceModel data simManager database collector defaultAttributesSetter sensitivitySetter delayedChanges allClassVarBOSS </inst-vars><class-inst-vars>timeStep cellClass spatialClasses socialClasses passiveClasses povColorsDict visualStateIsOpen charts activeProbes activityDiagrams currentSimulation randUi autoUpdating quickChanges </class-inst-vars><imports></imports><category>CormasKernel-Interface</category><attributes><package>Cormas</package></attributes></class><class><name>SpatialEntityElement</name><environment>CormasNS.Kernel</environment><super>CormasNS.Kernel.SpatialEntity</super><private>false</private><indexed-type>none</indexed-type><inst-vars>orderedNeighbourhood default </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CormasKernel-Entities</category><attributes><package>Cormas</package></attributes></class><class><name>ArcEntity</name><environment>CormasNS.Kernel</environment><super>CormasNS.Kernel.NetworkComponentEntity</super><private>false</private><indexed-type>none</indexed-type><inst-vars>startNode stopNode </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Cormas</package></attributes></class></st-source>